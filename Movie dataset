# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset (replace 'movie_data.csv' with the actual file path or URL)
url = 'https://example.com/movie_data.csv'  # Replace with actual URL or file path
df = pd.read_csv(url)

# Inspect the data
print(df.head())

# Data Preprocessing
# Fill missing values with the most common value for categorical features and median for numerical features
df.fillna({
    'genre': df['genre'].mode()[0],
    'director': df['director'].mode()[0],
    'actors': df['actors'].mode()[0],
    'budget': df['budget'].median(),
    'runtime': df['runtime'].median()
}, inplace=True)

# Encode categorical variables
label_enc = LabelEncoder()
df['genre'] = label_enc.fit_transform(df['genre'])
df['director'] = label_enc.fit_transform(df['director'])
df['actors'] = label_enc.fit_transform(df['actors'])

# Select features and target variable
X = df[['genre', 'director', 'actors', 'budget', 'runtime']]
y = df['rating']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model Building
# Using RandomForestRegressor
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Model Evaluation
y_pred = model.predict(X_test)
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("R2 Score:", r2_score(y_test, y_pred))

# Predicting ratings for new movies (example)
# Replace this with actual data or file path for new movies
new_movies = pd.DataFrame({
    'genre': ['Action', 'Comedy'],
    'director': ['Director1', 'Director2'],
    'actors': ['Actor1', 'Actor2'],
    'budget': [100000000, 20000000],
    'runtime': [120, 90]
})
new_movies['genre'] = label_enc.transform(new_movies['genre'])
new_movies['director'] = label_enc.transform(new_movies['director'])
new_movies['actors'] = label_enc.transform(new_movies['actors'])
new_X = new_movies[['genre', 'director', 'actors', 'budget', 'runtime']]
new_predictions = model.predict(new_X)
print("Predicted Ratings for New Movies:", new_predictions)
